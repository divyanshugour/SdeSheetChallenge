# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def rotateRight(self, head: Optional[ListNode], k: int) -> Optional[ListNode]:
        if not head or k==0:
            return head
        dummy = ListNode(None, head)
        n = 1
        while head.next:
            head = head.next
            n += 1
        k = k%n
        if k == 0:
            return dummy.next
        q = dummy.next
        for i in range(1,n-k):
            q = q.next
        head.next = dummy.next
        dummy.next = q.next
        q.next = None
        return dummy.next
        
            
        
